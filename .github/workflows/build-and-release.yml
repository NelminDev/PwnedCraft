name: Build & Release

on:
  push:
    # Triggers on commits that match the release pattern
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g. 1.0.0)'
        required: true
        type: string
      description:
        description: 'Release description'
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.13

      # Only generate the wrapper
      - name: Generate Gradle Wrapper
        run: gradle wrapper --gradle-version 8.13 --distribution-type bin

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Extract version and description
        id: release_info
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
            echo "description=${{ inputs.description }}" >> $GITHUB_OUTPUT
            echo "is_release=true" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.head_commit.message }}" =~ release\((.*?)\):(.*) ]]; then
            echo "version=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
            echo "description=${BASH_REMATCH[2]}" >> $GITHUB_OUTPUT
            echo "is_release=true" >> $GITHUB_OUTPUT
          else
            echo "is_release=false" >> $GITHUB_OUTPUT
          fi

      - name: Build with Gradle
        run: ./gradlew clean shadowJar

      - name: Create Release
        if: steps.release_info.outputs.is_release == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.release_info.outputs.version }}
          name: Release v${{ steps.release_info.outputs.version }}
          body: ${{ steps.release_info.outputs.description }}
          files: build/libs/PwnedCraft.jar
          draft: false
          prerelease: false