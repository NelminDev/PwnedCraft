name: Build & Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g. 1.0.0)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      jar_hash: ${{ steps.hash_calculation.outputs.hash }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.13

      - name: Generate Gradle Wrapper
        run: gradle wrapper --gradle-version 8.13

      - name: Build with Gradle
        run: ./gradlew clean shadowJar

      - name: Generate checksum
        id: hash_calculation
        run: |
          SHA=$(sha256sum build/libs/PwnedCraft.jar | cut -d ' ' -f 1)
          echo "hash=$SHA" >> $GITHUB_OUTPUT
          echo "$SHA" > build/libs/PwnedCraft.jar.sha256

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: PwnedCraft-${{ github.run_id }}
          path: |
            build/libs/PwnedCraft.jar
            build/libs/PwnedCraft.jar.sha256

  release:
    needs: build
    if: github.event_name == 'workflow_dispatch' || startsWith(github.event.head_commit.message, 'release(')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Download built artifact
        uses: actions/download-artifact@v4
        with:
          name: PwnedCraft-${{ github.run_id }}
          path: build/libs

      - name: Validate checksum
        run: |
          cd build/libs
          echo "$(cat PwnedCraft.jar.sha256)  PwnedCraft.jar" | sha256sum -c

      - name: Import GPG Key
        id: import_gpg
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo "$GPG_PRIVATE_KEY" > private.asc
          gpg --batch --pinentry-mode loopback --passphrase "$PASSPHRASE" --import private.asc
          echo "fingerprint=$(gpg --fingerprint --with-colons ${{ secrets.GPG_KEY_ID }} | awk -F: '$1 == "fpr" {print $10;exit}')" >> $GITHUB_OUTPUT
          rm private.asc

      - name: Sign JAR
        run: |
          gpg --batch --pinentry-mode loopback \
              --passphrase "${{ secrets.GPG_PASSPHRASE }}" \
              --detach-sign --armor \
              --local-user ${{ secrets.GPG_KEY_ID }} \
              --output build/libs/PwnedCraft.jar.asc \
              build/libs/PwnedCraft.jar

          gpg --verify build/libs/PwnedCraft.jar.asc build/libs/PwnedCraft.jar

      - name: Prepare Release Assets
        run: |
          mkdir -p release_files
          cp public-gpg-key.asc release_files/
          cp build/libs/PwnedCraft.* release_files/

      - name: Extract Version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            # Get version from gradle.properties
            VERSION=$(grep "project.version" gradle.properties | cut -d'=' -f2)
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Prepare Release Notes
        run: |
          {
            echo "## ⚠️ CRITICAL SECURITY DISCLAIMER ⚠️"
            echo
            echo "**WARNING: This plugin contains potentially harmful functionality and should NEVER be used on production servers!**"
            echo
            echo "This plugin was developed STRICTLY for educational and research purposes to demonstrate security vulnerabilities in Minecraft server environments. It contains features that can:"
            echo "- Execute system commands on the host machine"
            echo "- Modify server files and configurations"
            echo "- Impersonate other players"
            echo "- Grant unauthorized access to server controls"
            echo "- Potentially compromise server security"
            echo
            echo "DO NOT:"
            echo "- Install this plugin on any production server"
            echo "- Use this in a public server environment"
            echo "- Install plugins from untrusted sources"
            echo "- Run this plugin without understanding its full capabilities"
            echo
            echo "SECURITY CHECKLIST:"
            echo "- Always verify the source of plugins before installation"
            echo "- Carefully review plugin permissions and features"
            echo "- Scan suspicious plugins for malicious code"
            echo "- Never install plugins sent by unknown users"
            echo "- Be extremely cautious of plugins with system command access"
            echo
            echo "By using this plugin, you acknowledge that it is meant for EDUCATIONAL PURPOSES ONLY and that any misuse or deployment in unauthorized environments is strictly prohibited and could result in severe security breaches."
            echo
            cat "descriptions/${{ steps.version.outputs.version }}.txt"
          } > release_notes.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: 🎮 PwnedCraft v${{ steps.version.outputs.version }}
          body_path: release_notes.md
          files: |
            release_files/PwnedCraft.jar
            release_files/PwnedCraft.jar.asc
            release_files/public-gpg-key.asc
          draft: false
          prerelease: false