name: Build & Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g. 1.0.0)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      jar_hash: ${{ steps.hash_calculation.outputs.hash }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.13

      - name: Build with Gradle
        run: ./gradlew clean shadowJar

      - name: Generate checksum
        id: hash_calculation
        run: |
          SHA=$(sha256sum build/libs/PwnedCraft.jar | cut -d ' ' -f 1)
          echo "hash=$SHA" >> $GITHUB_OUTPUT
          echo "$SHA" > build/libs/PwnedCraft.jar.sha256

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: PwnedCraft-${{ github.run_id }}
          path: |
            build/libs/PwnedCraft.jar
            build/libs/PwnedCraft.jar.sha256

  release:
    needs: build
    if: github.event_name == 'workflow_dispatch' || startsWith(github.event.head_commit.message, 'release(')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Download built artifact
        uses: actions/download-artifact@v4
        with:
          name: PwnedCraft-${{ github.run_id }}
          path: build/libs

      - name: Validate checksum
        run: |
          cd build/libs
          echo "$(cat PwnedCraft.jar.sha256)  PwnedCraft.jar" | sha256sum -c

      - name: Import GPG Key
        id: import_gpg
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo "$GPG_PRIVATE_KEY" > private.asc
          gpg --batch --pinentry-mode loopback --passphrase "$PASSPHRASE" --import private.asc
          echo "fingerprint=$(gpg --fingerprint --with-colons ${{ secrets.GPG_KEY_ID }} | awk -F: '$1 == "fpr" {print $10;exit}')" >> $GITHUB_OUTPUT
          rm private.asc

      - name: Sign JAR
        run: |
          gpg --batch --pinentry-mode loopback \
              --passphrase "${{ secrets.GPG_PASSPHRASE }}" \
              --detach-sign --armor \
              --local-user ${{ secrets.GPG_KEY_ID }} \
              --output build/libs/PwnedCraft.jar.asc \
              build/libs/PwnedCraft.jar

          # Verifikation der Signatur
          gpg --verify build/libs/PwnedCraft.jar.asc build/libs/PwnedCraft.jar

      - name: Prepare Release Assets
        run: |
          # Kopiere den öffentlichen Schlüssel aus dem Repository
          mkdir -p release_files
          cp public-gpg-key.asc release_files/
          cp build/libs/PwnedCraft.* release_files/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.release_info.outputs.version }}
          name: Release v${{ steps.release_info.outputs.version }}
          body_path: release_notes.md
          files: |
            release_files/PwnedCraft.jar
            release_files/PwnedCraft.jar.asc
            release_files/public-gpg-key.asc
          draft: false
          prerelease: false